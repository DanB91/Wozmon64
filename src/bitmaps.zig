const w64 = @import("wozmon64.zig");
const toolbox = @import("toolbox");

pub const Font = struct {
    width: usize,
    height: usize,
    kerning: usize,

    bitmaps: []w64.Pixel,

    pub fn init(scale: usize, arena: *toolbox.Arena) Font {
        const width = scale * CHARACTER_WIDTH;
        const height = scale * CHARACTER_HEIGHT;
        const bitmaps = arena.push_slice(w64.Pixel, width * height * PRESCALED_CHARACTERS.len);
        const ret = Font{
            .width = width,
            .height = height,
            .kerning = width + scale,
            .bitmaps = bitmaps,
        };
        const text_color = w64.Pixel{ .colors = .{ .r = 0xFF, .g = 0xFF, .b = 0xFF } };
        const background_color = w64.Pixel{ .data = 0 };

        for (PRESCALED_CHARACTERS, 0..) |char, i| {
            for (char, 0..) |row, cy| {
                for (0..CHARACTER_WIDTH, 0..) |column, cx| {
                    const shift: u6 = CHARACTER_WIDTH - 1 - @as(u6, @intCast(column));
                    const pixel: w64.Pixel = if (row & (@as(usize, 1) << shift) != 0)
                        text_color
                    else
                        background_color;
                    const bitmap = ret.character_bitmap(i);
                    for (0..scale) |dy| {
                        for (0..scale) |dx| {
                            bitmap[(cy * scale + dy) * width + (cx * scale + dx)] = pixel;
                        }
                    }
                }
            }
        }
        return ret;
    }

    pub fn character_bitmap(self: *const Font, index: usize) []w64.Pixel {
        const start = index * self.width * self.height;
        const end = start + self.width * self.height;
        return self.bitmaps[start..end];
    }
};

const CHARACTER_WIDTH = 5;
const CHARACTER_HEIGHT = 8;

//Taken from https://www.applefritter.com/files/signetics2513.pdf
//NOTE: It seems the Signetics 2513 had a strange interpetation of ASCII
//      in that '@' thru '_' was before ' ' thru '?'.
//      Wozmon64 uses the correct ASCII ordering

const PRESCALED_CHARACTERS = [_][8]u8{
    .{ //space
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
    },
    .{ // !
        0b00000,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00000,
        0b00100,
    },
    .{ //"
        0b00000,
        0b01010,
        0b01010,
        0b01010,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
    },
    .{ //#
        0b00000,
        0b01010,
        0b01010,
        0b11111,
        0b01010,
        0b11111,
        0b01010,
        0b01010,
    },
    .{ //$
        0b00000,
        0b00100,
        0b01111,
        0b10100,
        0b01110,
        0b00101,
        0b11110,
        0b00100,
    },
    .{ //%
        0b00000,
        0b11000,
        0b11001,
        0b00010,
        0b00100,
        0b01000,
        0b10011,
        0b00011,
    },
    .{ //&
        0b00000,
        0b01000,
        0b10100,
        0b10100,
        0b01000,
        0b10101,
        0b10010,
        0b01101,
    },
    .{ //'
        0b00000,
        0b00100,
        0b00100,
        0b00100,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
    },
    .{ //(
        0b00000,
        0b00100,
        0b01000,
        0b10000,
        0b10000,
        0b10000,
        0b01000,
        0b00100,
    },
    .{ //)
        0b00000,
        0b00100,
        0b00010,
        0b00001,
        0b00001,
        0b00001,
        0b00010,
        0b00100,
    },
    .{ //*
        0b00000,
        0b00100,
        0b10101,
        0b01110,
        0b00100,
        0b01110,
        0b10101,
        0b00100,
    },
    .{ //+
        0b00000,
        0b00000,
        0b00100,
        0b00100,
        0b11111,
        0b00100,
        0b00100,
        0b00000,
    },
    .{ //,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00100,
        0b00100,
        0b01000,
    },
    .{ //-
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b11111,
        0b00000,
        0b00000,
        0b00000,
    },
    .{ //.
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00100,
    },
    .{ // /
        0b00000,
        0b00000,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b10000,
        0b00000,
    },
    .{ //0
        0b00000,
        0b01110,
        0b10001,
        0b10011,
        0b10101,
        0b11001,
        0b10001,
        0b01110,
    },
    .{ //1
        0b00000,
        0b00100,
        0b01100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b01110,
    },
    .{ //2
        0b00000,
        0b01110,
        0b10001,
        0b00001,
        0b00110,
        0b01000,
        0b10000,
        0b11111,
    },
    .{ //3
        0b00000,
        0b11111,
        0b00001,
        0b00010,
        0b00110,
        0b00001,
        0b10001,
        0b01110,
    },
    .{ //4
        0b00000,
        0b00010,
        0b00110,
        0b01010,
        0b10010,
        0b11111,
        0b00010,
        0b00010,
    },
    .{ //5
        0b00000,
        0b11111,
        0b10000,
        0b11110,
        0b00001,
        0b00001,
        0b10001,
        0b01110,
    },
    .{ //6
        0b00000,
        0b00111,
        0b01000,
        0b10000,
        0b11110,
        0b10001,
        0b10001,
        0b01110,
    },
    .{ //7
        0b00000,
        0b11111,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b01000,
        0b01000,
    },
    .{ //8
        0b00000,
        0b01110,
        0b10001,
        0b10001,
        0b01110,
        0b10001,
        0b10001,
        0b01110,
    },
    .{ //9
        0b00000,
        0b01110,
        0b10001,
        0b10001,
        0b01111,
        0b00001,
        0b00010,
        0b11100,
    },
    .{ //:
        0b00000,
        0b00000,
        0b00000,
        0b00100,
        0b00000,
        0b00100,
        0b00000,
        0b00000,
    },
    .{ //;
        0b00000,
        0b00000,
        0b00000,
        0b00100,
        0b00000,
        0b00100,
        0b00100,
        0b01000,
    },
    .{ //<
        0b00000,
        0b00010,
        0b00100,
        0b01000,
        0b10000,
        0b01000,
        0b00100,
        0b00010,
    },
    .{ //=
        0b00000,
        0b00000,
        0b00000,
        0b11111,
        0b00000,
        0b11111,
        0b00000,
        0b00000,
    },
    .{ //>
        0b00000,
        0b01000,
        0b00100,
        0b00010,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
    },
    .{ //?
        0b00000,
        0b01110,
        0b10001,
        0b00010,
        0b00100,
        0b00100,
        0b00000,
        0b00100,
    },
    .{ //@
        0b00000,
        0b01110,
        0b10001,
        0b10101,
        0b10111,
        0b10110,
        0b10000,
        0b01111,
    },
    .{ //A
        0b00000,
        0b00100,
        0b01010,
        0b10001,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
    },
    .{ //B
        0b00000,
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10001,
        0b10001,
        0b11110,
    },
    .{ //C
        0b00000,
        0b01110,
        0b10001,
        0b10000,
        0b10000,
        0b10000,
        0b10001,
        0b01110,
    },
    .{ //D
        0b00000,
        0b11110,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b11110,
    },
    .{ //E
        0b00000,
        0b11111,
        0b10000,
        0b10000,
        0b11110,
        0b10000,
        0b10000,
        0b11111,
    },
    .{ //F
        0b00000,
        0b11111,
        0b10000,
        0b10000,
        0b11110,
        0b10000,
        0b10000,
        0b10000,
    },
    .{ //G
        0b00000,
        0b01111,
        0b10000,
        0b10000,
        0b10000,
        0b10011,
        0b10001,
        0b01111,
    },
    .{ //H
        0b00000,
        0b10001,
        0b10001,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
        0b10001,
    },
    .{ //I
        0b00000,
        0b01110,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b01110,
    },
    .{ //J
        0b00000,
        0b00001,
        0b00001,
        0b00001,
        0b00001,
        0b00001,
        0b10001,
        0b01110,
    },
    .{ //K
        0b00000,
        0b10001,
        0b10010,
        0b10100,
        0b11000,
        0b10100,
        0b10010,
        0b10001,
    },
    .{ //L
        0b00000,
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b11111,
    },
    .{ //M
        0b00000,
        0b10001,
        0b11011,
        0b10101,
        0b10101,
        0b10001,
        0b10001,
        0b10001,
    },
    .{ //M
        0b00000,
        0b10001,
        0b10001,
        0b11001,
        0b10101,
        0b10011,
        0b10001,
        0b10001,
    },
    .{ //O
        0b00000,
        0b01110,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01110,
    },
    .{ //P
        0b00000,
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10000,
        0b10000,
        0b10000,
    },
    .{ //Q
        0b00000,
        0b01110,
        0b10001,
        0b10001,
        0b10001,
        0b10101,
        0b10010,
        0b01101,
    },
    .{ //R
        0b00000,
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10100,
        0b10010,
        0b10001,
    },
    .{ //S
        0b00000,
        0b01110,
        0b10001,
        0b10000,
        0b01110,
        0b00001,
        0b10001,
        0b01110,
    },
    .{ //T
        0b00000,
        0b11111,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
    },
    .{ //U
        0b00000,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01110,
    },
    .{ //V
        0b00000,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01010,
        0b00100,
    },
    .{ //W
        0b00000,
        0b10001,
        0b10001,
        0b10001,
        0b10101,
        0b10101,
        0b11011,
        0b10001,
    },
    .{ //X
        0b00000,
        0b10001,
        0b10001,
        0b01010,
        0b00100,
        0b01010,
        0b10001,
        0b10001,
    },
    .{ //Y
        0b00000,
        0b10001,
        0b10001,
        0b01010,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
    },
    .{ //Z
        0b00000,
        0b11111,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b10000,
        0b11111,
    },
    .{ //[
        0b00000,
        0b11111,
        0b11000,
        0b11000,
        0b11000,
        0b11000,
        0b11000,
        0b11111,
    },
    .{ //\
        0b00000,
        0b00000,
        0b10000,
        0b01000,
        0b00100,
        0b00010,
        0b00001,
        0b00000,
    },
    .{ //]
        0b00000,
        0b11111,
        0b00011,
        0b00011,
        0b00011,
        0b00011,
        0b00011,
        0b11111,
    },
    .{ //^
        0b00000,
        0b00000,
        0b00000,
        0b00100,
        0b01010,
        0b10001,
        0b00000,
        0b00000,
    },
    .{ //_
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b11111,
    },
};

// const std = @import("std");
// test {
//     const at_bitmap = CHARACTERS[0];
//     const stdout = std.io.getStdOut().writer();
//     for (0..CharacterBitmap.HEIGHT) |y| {
//         for (0..CharacterBitmap.WIDTH) |x| {
//             if (at_bitmap.pixels[y * CharacterBitmap.WIDTH + x].data != 0) {
//                 try stdout.print("*", .{});
//             } else {
//                 try stdout.print(" ", .{});
//             }
//         }
//         try stdout.print("\n", .{});
//     }
// }
